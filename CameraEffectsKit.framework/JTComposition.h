/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit
 */

@interface JTComposition : NSObject {
    NSMutableDictionary * _assetsUsed;
    AVMutableAudioMix * _audioMix;
    NSMutableArray * _audioMixParameters;
    AVMutableComposition * _avComposition;
    AVPlayerItem * _avPlayerItem;
    long long  _backgroundAudioTrackCount;
    NSMutableArray * _backgroundAudioTracks;
    NSMapTable * _clipCustomRendererMapTable;
    <JTCompositionClipsDataSource> * _clipsDataSource;
    JTCompositionDuckingTimes * _compositionDuckingTimes;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _duration;
    long long  _foregroundAudioTrackCount;
    NSMutableArray * _foregroundAudioTracks;
    float  _globalAudioVolume;
    struct PVTransformAnimationInfo { 
        struct { 
            long long value; 
            int timescale; 
            unsigned int flags; 
            long long epoch; 
        } time; 
        struct CGPoint { 
            double x; 
            double y; 
        } translation; 
        double scale; 
        double rotation; 
    }  _liveCompositionTransform;
    JTClip * _liveTransformClip;
    bool  _needsUpdate;
    AVPlayerItem * _playerItem;
    struct CGSize { 
        double width; 
        double height; 
    }  _previousRenderSize;
    JTCompositionTrackGroup * _trackGroupA;
    JTCompositionTrackGroup * _trackGroupB;
    AVMutableVideoComposition * _videoComposition;
    NSMutableArray * _videoCompositionInstructions;
    struct CGSize { 
        double width; 
        double height; 
    }  _viewSize;
}

@property (nonatomic, retain) NSMutableDictionary *assetsUsed;
@property (nonatomic, retain) AVMutableAudioMix *audioMix;
@property (nonatomic, retain) NSMutableArray *audioMixParameters;
@property (nonatomic, retain) AVMutableComposition *avComposition;
@property (nonatomic, retain) AVPlayerItem *avPlayerItem;
@property (nonatomic) long long backgroundAudioTrackCount;
@property (nonatomic, retain) NSMutableArray *backgroundAudioTracks;
@property (nonatomic, retain) <JTCompositionClipsDataSource> *clipsDataSource;
@property (nonatomic, retain) JTCompositionDuckingTimes *compositionDuckingTimes;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } duration;
@property (nonatomic) long long foregroundAudioTrackCount;
@property (nonatomic, retain) NSMutableArray *foregroundAudioTracks;
@property (nonatomic) float globalAudioVolume;
@property (nonatomic) struct PVTransformAnimationInfo { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; double x4; } liveCompositionTransform;
@property (nonatomic, retain) JTClip *liveTransformClip;
@property (nonatomic) bool needsUpdate;
@property (nonatomic, retain) AVPlayerItem *playerItem;
@property (nonatomic) struct CGSize { double x1; double x2; } previousRenderSize;
@property (nonatomic, retain) JTCompositionTrackGroup *trackGroupA;
@property (nonatomic, retain) JTCompositionTrackGroup *trackGroupB;
@property (nonatomic, retain) AVMutableVideoComposition *videoComposition;
@property (nonatomic, retain) NSMutableArray *videoCompositionInstructions;
@property (nonatomic) struct CGSize { double x1; double x2; } viewSize;

- (void).cxx_destruct;
- (id)AVComposition;
- (bool)CARenderingRequiredForClip:(id)arg1;
- (void)addAudioPointsToArray:(id)arg1 atFrameTime:(int)arg2 volume:(double)arg3;
- (void)addBackTracksIfRemoved;
- (bool)addVolumeRampToTrackGroup:(id)arg1 forClip:(id)arg2 shouldUseDucking:(bool)arg3;
- (id)animojiCustomRendererPropsForClip:(id)arg1 currentCustomProperties:(id)arg2;
- (void)applyExportProperties;
- (void)applyPlayerItemProperties;
- (bool)assembleAudioCompositionTrackGroups:(id)arg1 audioItem:(id)arg2 clip:(id)arg3 shouldUseDucking:(bool)arg4 shouldLoopClipContents:(bool)arg5;
- (void)assetUsed:(id)arg1;
- (id)assetsUsed;
- (id)audioMix;
- (id)audioMixParameters;
- (id)avComposition;
- (id)avPlayerItem;
- (long long)backgroundAudioTrackCount;
- (id)backgroundAudioTracks;
- (id)buildClipList;
- (void)burnInPlaybackSettings:(id)arg1;
- (void)clearPlayerItemProperties;
- (bool)clipHasEnabledVoiceover:(id)arg1;
- (bool)clipIsForegroundAudio:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })clipTransform:(id)arg1;
- (id)clipsDataSource;
- (id)compositionDuckingTimes;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })compositionItemsForState:(id)arg1 compositionItem:(id*)arg2 backfillCompositionItem:(id*)arg3;
- (void)dealloc;
- (id)dissolveGraphNode:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1 from:(id)arg2 to:(id)arg3;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })duration;
- (bool)emptySegments:(id)arg1;
- (id)faceTrackingCustomRendererPropsForClip:(id)arg1 currentCustomProperties:(id)arg2;
- (void)finalizeVideoComposition;
- (id)foregroundAudioClips:(id)arg1;
- (long long)foregroundAudioTrackCount;
- (id)foregroundAudioTracks;
- (float)globalAudioVolume;
- (id)initWithClipsDataSource:(id)arg1;
- (id)instructionToHideTrackID:(int)arg1 whileHidingTrackID:(int)arg2 timeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg3 requiresCARendering:(bool)arg4;
- (id)instructionToShowClip:(id)arg1 withTrackID:(int)arg2 withTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg3 timeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg4 requiresCARendering:(bool)arg5;
- (id)instructionToShowImageWithClip:(id)arg1 withTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg2 timeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg3 requiresCARendering:(bool)arg4;
- (struct PVTransformAnimationInfo { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; double x4; })liveCompositionTransform;
- (id)liveTransformClip;
- (void)logAddedTrack:(id)arg1 trackID:(int)arg2;
- (void)logRemovedTrack:(id)arg1 trackID:(int)arg2;
- (id)makeAudioPointsArrayForClip:(id)arg1 shouldUseDuckingArrays:(bool)arg2;
- (void)markDirty;
- (struct CGSize { double x1; double x2; })naturalSizeForClipAfterTransform:(id)arg1;
- (bool)needsUpdate;
- (id)newInstructionGraphNodeForClip:(id)arg1 clipTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg2 compositionTrackID:(int)arg3 requiresTweening:(bool*)arg4 isContainedClip:(bool)arg5;
- (void)noteEffectChangeForClip:(id)arg1;
- (int)outputFrameRate;
- (id)playerItem;
- (void)playerItemDidReachEnd:(id)arg1;
- (struct CGSize { double x1; double x2; })previousRenderSize;
- (void)rebuildCompositionInstructionsForVideoStillTitleCard:(id)arg1;
- (void)refreshAVComposition;
- (void)refreshCompositionInstructionsWithinRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (void)refreshEffectParameters:(id)arg1;
- (void)removeEmptyTracks;
- (void)removeTrackFromAudioMix:(int)arg1;
- (bool)removeTrackIfEmpty:(id)arg1;
- (void)setAssetsUsed:(id)arg1;
- (void)setAudioMix:(id)arg1;
- (void)setAudioMixParameters:(id)arg1;
- (void)setAvComposition:(id)arg1;
- (void)setAvPlayerItem:(id)arg1;
- (void)setBackgroundAudioTrackCount:(long long)arg1;
- (void)setBackgroundAudioTracks:(id)arg1;
- (void)setClipsDataSource:(id)arg1;
- (void)setCompositionDuckingTimes:(id)arg1;
- (void)setDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setForegroundAudioTrackCount:(long long)arg1;
- (void)setForegroundAudioTracks:(id)arg1;
- (void)setGlobalAudioVolume:(float)arg1;
- (void)setLiveCompositionTransform:(struct PVTransformAnimationInfo { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; double x4; })arg1;
- (void)setLiveTransformClip:(id)arg1;
- (void)setNeedsUpdate:(bool)arg1;
- (void)setPlayerItem:(id)arg1;
- (void)setPreviousRenderSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setRenderScale;
- (void)setTrackGroupA:(id)arg1;
- (void)setTrackGroupB:(id)arg1;
- (void)setVideoComposition:(id)arg1;
- (void)setVideoCompositionInstructions:(id)arg1;
- (void)setViewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setupVideoCompositionContext:(id)arg1;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })sourceTimeRangeForAudioClip:(id)arg1 endOfComposition:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })sourceTimeRangeForClip:(id)arg1 endOfComposition:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 projectStartTime:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg3;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })timeRangeForClip:(id)arg1;
- (id)trackGroupA;
- (id)trackGroupB;
- (void)update;
- (void)updateBackgroundAudioCompositionTracks:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)updateCustomRendererMapForClip:(id)arg1;
- (void)updateForegroundAudioCompositionTracks:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 withClips:(id)arg2;
- (void)updateLiveTransformForClip:(id)arg1;
- (void)updateRenderSizeIfNeeded;
- (id)updateVideoAndAudioInstructionForState:(id)arg1 previousInstructions:(id)arg2 waitingForResource:(bool)arg3;
- (void)useLiveTransformForClip:(id)arg1;
- (bool)validate;
- (id)videoComposition;
- (id)videoCompositionInstructions;
- (struct CGSize { double x1; double x2; })viewSize;
- (float)volumeForClip:(id)arg1;
- (bool)writeVolumeRampToCompositionFromTrackGroup:(id)arg1 endOfComposition:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;

@end
