/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit
 */

@interface JTClipSequenceDisplayViewController : JTViewController <JTAVPlayerViewerDelegate, JTClipSequencePlaybackDelegate, UIGestureRecognizerDelegate> {
    int  _cachedCurrentTime;
    int  _cachedDuration;
    int  _cachedMuted;
    struct CGSize { 
        double width; 
        double height; 
    }  _cachedRenderSizeInPixels;
    bool  _cachedWasPlaying;
    <JTCompositionClipsDataSource> * _clipsDataSource;
    JTClipSequencePlayer * _clipsPlayer;
    <JTClipSequenceDisplayViewControllerDelegate> * _delegate;
    bool  _disableVideoDisplayGestures;
    NSString * _displayName;
    bool  _dontRemovePlaceHolderOnDisplay;
    bool  _dontRenderLiveTitles;
    bool  _duckAllAudioClips;
    bool  _isDisplaying;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastPlayerViewSize;
    UIView * _placeHolderView;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _playbackTimeChangedObserverInterval;
    UIColor * _restoreToColor;
    long long  _videoContentMode;
    UIView * _videoDisplayOverlayView;
    UIView * _viewFlashed;
}

@property (nonatomic) int cachedCurrentTime;
@property (nonatomic) int cachedDuration;
@property (nonatomic) int cachedMuted;
@property (nonatomic) struct CGSize { double x1; double x2; } cachedRenderSizeInPixels;
@property (nonatomic) bool cachedWasPlaying;
@property (nonatomic) <JTCompositionClipsDataSource> *clipsDataSource;
@property (nonatomic, retain) JTClipSequencePlayer *clipsPlayer;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <JTClipSequenceDisplayViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableVideoDisplayGestures;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic) bool dontRemovePlaceHolderOnDisplay;
@property (nonatomic) bool dontRenderLiveTitles;
@property (nonatomic) bool duckAllAudioClips;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isDisplaying;
@property struct CGSize { double x1; double x2; } lastPlayerViewSize;
@property (getter=isMuted, nonatomic) bool muted;
@property (nonatomic, retain) UIView *placeHolderView;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } playbackTimeChangedObserverInterval;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } renderSizeInPixels;
@property (nonatomic, retain) UIColor *restoreToColor;
@property (readonly) Class superclass;
@property (nonatomic) long long videoContentMode;
@property (nonatomic, retain) UIView *videoDisplayOverlayView;
@property (nonatomic) UIView *viewFlashed;

- (void).cxx_destruct;
- (void)addPlaceHolder;
- (void)appDidBecomeActive:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (void)appWillResignActive:(id)arg1;
- (void)beginFlash;
- (int)cachedCurrentTime;
- (int)cachedDuration;
- (int)cachedMuted;
- (struct CGSize { double x1; double x2; })cachedRenderSizeInPixels;
- (bool)cachedWasPlaying;
- (id)clipsDataSource;
- (id)clipsPlayer;
- (id)contentModeToVideoGravity:(long long)arg1;
- (struct CGPoint { double x1; double x2; })convertPointInPlaybackSizeToClipPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPointInPlaybackSizeToClipPointNormalized:(struct CGPoint { double x1; double x2; })arg1;
- (int)currentTime;
- (void)dealloc;
- (id)delegate;
- (void)didReceiveMemoryWarning;
- (bool)disableVideoDisplayGestures;
- (void)dispatchBlockWhenDone:(id /* block */)arg1;
- (id)displayName;
- (void)displayPlaceHolder;
- (bool)dontRemovePlaceHolderOnDisplay;
- (bool)dontRenderLiveTitles;
- (bool)duckAllAudioClips;
- (int)duration;
- (void)endFlash;
- (int)frameRate;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)installVideoDisplayGestures;
- (bool)isDisplaying;
- (bool)isMuted;
- (bool)isPlaying;
- (struct CGSize { double x1; double x2; })lastPlayerViewSize;
- (void)liveTransformForClip:(id)arg1;
- (void)mediaserverdCrashed;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pause;
- (void)pauseWithCompletionBlock:(id /* block */)arg1;
- (id)placeHolderView;
- (id)placeholderContainerView;
- (void)play;
- (void)playWithCompletionHandler:(id /* block */)arg1;
- (void)playbackAreaDoubleTapped:(id)arg1;
- (void)playbackAreaPanned:(id)arg1;
- (void)playbackAreaPinched:(id)arg1;
- (void)playbackAreaRotated:(id)arg1;
- (void)playbackAreaTapped:(id)arg1;
- (void)playbackDidReachEnd;
- (void)playbackDidReachEnd:(id)arg1;
- (void)playbackDidStart:(id)arg1;
- (void)playbackDidStop:(id)arg1 currentTime:(int)arg2;
- (void)playbackReadyForDisplayChanged:(id)arg1 isReady:(bool)arg2;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })playbackTimeChangedObserverInterval;
- (void)playbackTimeDidChange:(id)arg1 currentTime:(int)arg2;
- (void)playerBecameReadyForDisplayChanged:(bool)arg1;
- (id)playerContainerView;
- (id)playerViewer;
- (void)playerWillBeDestroyed:(id)arg1;
- (void)preparePlaceHolder;
- (void)prepareVideoDisplayView;
- (void)reloadClipDataSource;
- (void)reloadClipDataSourceIfNeeded;
- (void)reloadClipDataSourceOnBecomingActive;
- (void)removePlaceHolder;
- (struct CGSize { double x1; double x2; })renderSizeInPixels;
- (void)resetPlaybackTimeChangedObserverInterval;
- (id)restoreToColor;
- (void)seekToTime:(int)arg1;
- (void)setCachedCurrentTime:(int)arg1;
- (void)setCachedDuration:(int)arg1;
- (void)setCachedMuted:(int)arg1;
- (void)setCachedRenderSizeInPixels:(struct CGSize { double x1; double x2; })arg1;
- (void)setCachedWasPlaying:(bool)arg1;
- (void)setClipsDataSource:(id)arg1;
- (void)setClipsPlayer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisableVideoDisplayGestures:(bool)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setDontRemovePlaceHolderOnDisplay:(bool)arg1;
- (void)setDontRenderLiveTitles:(bool)arg1;
- (void)setDuckAllAudioClips:(bool)arg1;
- (void)setLastPlayerViewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMuted:(bool)arg1;
- (void)setNeedsCompositionUpdate;
- (void)setNeedsCompositionUpdateForClip:(id)arg1;
- (void)setPlaceHolderView:(id)arg1;
- (void)setPlaybackTimeChangeNotificationPeriod:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setPlaybackTimeChangedObserverInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setRestoreToColor:(id)arg1;
- (void)setVideoContentMode:(long long)arg1;
- (void)setVideoDisplayOverlayView:(id)arg1;
- (void)setViewFlashed:(id)arg1;
- (void)sharedInit;
- (void)unloadClipDataSource;
- (void)updateCachedPlaybackProperties;
- (void)updateDelegatePlayer;
- (void)updateLiveTransformForClip:(id)arg1;
- (void)updateVideoDisplayViewBounds;
- (long long)videoContentMode;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })videoDisplayBounds;
- (id)videoDisplayOverlayView;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)viewFlashed;
- (id)viewToFlash;

@end
