/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/LinkPresentation.framework/LinkPresentation
 */

@interface LPCaptionBarPresentationProperties : NSObject {
    LPCaptionRowPresentationProperties * _aboveTop;
    LPCaptionRowPresentationProperties * _belowBottom;
    LPImage * _belowLeadingIcon;
    UIColor * _belowLeadingIconMaskColor;
    LPCaptionRowPresentationProperties * _bottom;
    long long  _leadingAccessoryType;
    LPImage * _leadingIcon;
    UIColor * _leadingIconMaskColor;
    struct CGSize { 
        double width; 
        double height; 
    }  _leadingIconSize;
    NSNumber * _minimumHeight;
    LPCaptionRowPresentationProperties * _top;
    long long  _trailingAccessoryType;
    LPImage * _trailingIcon;
    UIColor * _trailingIconMaskColor;
    struct CGSize { 
        double width; 
        double height; 
    }  _trailingIconSize;
}

@property (nonatomic, readonly, retain) LPCaptionRowPresentationProperties *aboveTop;
@property (nonatomic, readonly, retain) LPCaptionRowPresentationProperties *belowBottom;
@property (nonatomic, retain) LPImage *belowLeadingIcon;
@property (nonatomic, retain) UIColor *belowLeadingIconMaskColor;
@property (nonatomic, readonly, retain) LPCaptionRowPresentationProperties *bottom;
@property (nonatomic, readonly) bool hasAnyContent;
@property (nonatomic) long long leadingAccessoryType;
@property (nonatomic, retain) LPImage *leadingIcon;
@property (nonatomic, retain) UIColor *leadingIconMaskColor;
@property (nonatomic) struct CGSize { double x1; double x2; } leadingIconSize;
@property (nonatomic, retain) NSNumber *minimumHeight;
@property (nonatomic, readonly, retain) LPCaptionRowPresentationProperties *top;
@property (nonatomic) long long trailingAccessoryType;
@property (nonatomic, retain) LPImage *trailingIcon;
@property (nonatomic, retain) UIColor *trailingIconMaskColor;
@property (nonatomic) struct CGSize { double x1; double x2; } trailingIconSize;

- (void).cxx_destruct;
- (id)aboveTop;
- (id)belowBottom;
- (id)belowLeadingIcon;
- (id)belowLeadingIconMaskColor;
- (id)belowLeftIcon;
- (id)belowLeftIconMaskColor;
- (id)belowRightIcon;
- (id)belowRightIconMaskColor;
- (id)bottom;
- (bool)hasAnyContent;
- (id)init;
- (long long)leadingAccessoryType;
- (id)leadingIcon;
- (id)leadingIconMaskColor;
- (struct CGSize { double x1; double x2; })leadingIconSize;
- (long long)leftAccessoryType;
- (id)leftIcon;
- (id)leftIconMaskColor;
- (id)minimumHeight;
- (long long)rightAccessoryType;
- (id)rightIcon;
- (id)rightIconMaskColor;
- (void)setBelowLeadingIcon:(id)arg1;
- (void)setBelowLeadingIconMaskColor:(id)arg1;
- (void)setLeadingAccessoryType:(long long)arg1;
- (void)setLeadingIcon:(id)arg1;
- (void)setLeadingIconMaskColor:(id)arg1;
- (void)setLeadingIconSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMinimumHeight:(id)arg1;
- (void)setTrailingAccessoryType:(long long)arg1;
- (void)setTrailingIcon:(id)arg1;
- (void)setTrailingIconMaskColor:(id)arg1;
- (void)setTrailingIconSize:(struct CGSize { double x1; double x2; })arg1;
- (id)top;
- (long long)trailingAccessoryType;
- (id)trailingIcon;
- (id)trailingIconMaskColor;
- (struct CGSize { double x1; double x2; })trailingIconSize;

@end
