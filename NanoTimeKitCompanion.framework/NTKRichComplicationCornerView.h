/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
 */

@interface NTKRichComplicationCornerView : NTKRichComplicationView {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _hitTestBounds;
    UIBezierPath * _hitTestPath;
    double  _innerComponentRotationInDegree;
    double  _outerComponentRotationInDegree;
    long long  _position;
}

@property (nonatomic) double innerComponentRotationInDegree;
@property (nonatomic) double outerComponentRotationInDegree;
@property (nonatomic) long long position;

+ (id)_createHitTestPathWithViewBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 position:(long long)arg2 forDevice:(id)arg3;
+ (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_keylinePaddingForPosition:(long long)arg1 conentSize:(struct CGSize { double x1; double x2; })arg2 forDevice:(id)arg3;
+ (id)keylineImageForPosition:(long long)arg1 filled:(bool)arg2 forDevice:(id)arg3;
+ (id)keylineViewForPosition:(long long)arg1 forDevice:(id)arg2;
+ (id)layoutRuleForState:(long long)arg1 position:(long long)arg2 faceBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 forDevice:(id)arg4;
+ (void)startDataAnimationFromEarlierView:(id)arg1 laterView:(id)arg2 isForward:(bool)arg3 completionBlock:(id /* block */)arg4;
+ (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transformForState:(long long)arg1 position:(long long)arg2 device:(id)arg3;
+ (struct CGSize { double x1; double x2; })viewSizeForDevice:(id)arg1;
+ (id)viewWithLegacyComplicationType:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)_createAndAddColoringLabelWithFontSize:(double)arg1;
- (void)_editingDidEnd;
- (void)_layoutCurvedLabel:(id)arg1 centerAngleInDegree:(double)arg2 editingRotationInDegree:(double)arg3;
- (void)_layoutView:(id)arg1 origin:(struct CGPoint { double x1; double x2; })arg2 editingTranslation:(struct CGPoint { double x1; double x2; })arg3 editingRotationInDegree:(double)arg4;
- (void)_setEditingTransitionFraction:(double)arg1 direction:(long long)arg2 position:(long long)arg3 type:(long long)arg4;
- (void)_setWhistlerAnalogEditingTransitonFraction:(double)arg1 direction:(long long)arg2 position:(long long)arg3;
- (void)_transitToHighlightState:(bool)arg1 fraction:(double)arg2;
- (id)init;
- (id)initWithFamily:(long long)arg1;
- (double)innerComponentRotationInDegree;
- (double)outerComponentRotationInDegree;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (long long)position;
- (void)setInnerComponentRotationInDegree:(double)arg1;
- (void)setOuterComponentRotationInDegree:(double)arg1;
- (void)setPosition:(long long)arg1;

@end
