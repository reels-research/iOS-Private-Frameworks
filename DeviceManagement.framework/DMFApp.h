/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement
 */

@interface DMFApp : NSObject <NSCopying, NSSecureCoding> {
    NSString * _VPNUUIDString;
    NSString * _bundleIdentifier;
    NSDictionary * _configuration;
    NSString * _displayName;
    NSNumber * _dynamicUsage;
    NSNumber * _externalVersionIdentifier;
    NSDictionary * _feedback;
    bool  _hasUpdateAvailable;
    unsigned long long  _installationState;
    bool  _isAdHocCodeSigned;
    bool  _isAppStoreVendable;
    bool  _isBetaApp;
    bool  _isBlocked;
    bool  _isDeviceBasedVPP;
    bool  _isLicenseExpired;
    bool  _isLicenseRevoked;
    bool  _isPlaceholder;
    bool  _isRestricted;
    bool  _isUPP;
    bool  _isUserBasedVPP;
    bool  _isValidated;
    DMFAppManagementInformation * _managementInformation;
    NSNumber * _onDemandResourcesUsage;
    NSNumber * _sharedUsage;
    NSString * _shortVersion;
    NSNumber * _staticUsage;
    NSNumber * _storeItemIdentifier;
    unsigned long long  _type;
    NSString * _version;
}

@property (nonatomic, copy) NSString *VPNUUIDString;
@property (nonatomic, copy) NSString *bundleIdentifier;
@property (nonatomic, copy) NSDictionary *configuration;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic, copy) NSNumber *dynamicUsage;
@property (nonatomic, copy) NSNumber *externalVersionIdentifier;
@property (nonatomic, copy) NSDictionary *feedback;
@property (nonatomic) bool hasUpdateAvailable;
@property (nonatomic) unsigned long long installationState;
@property (nonatomic) bool isAdHocCodeSigned;
@property (nonatomic) bool isAppStoreVendable;
@property (nonatomic) bool isBetaApp;
@property (nonatomic) bool isBlocked;
@property (nonatomic) bool isDeviceBasedVPP;
@property (nonatomic) bool isLicenseExpired;
@property (nonatomic) bool isLicenseRevoked;
@property (nonatomic) bool isPlaceholder;
@property (nonatomic) bool isRestricted;
@property (nonatomic) bool isUPP;
@property (nonatomic) bool isUserBasedVPP;
@property (nonatomic) bool isValidated;
@property (nonatomic, copy) DMFAppManagementInformation *managementInformation;
@property (nonatomic, copy) NSNumber *onDemandResourcesUsage;
@property (nonatomic, copy) NSNumber *sharedUsage;
@property (nonatomic, copy) NSString *shortVersion;
@property (nonatomic, copy) NSNumber *staticUsage;
@property (nonatomic, copy) NSNumber *storeItemIdentifier;
@property (nonatomic) unsigned long long type;
@property (nonatomic, copy) NSString *version;

+ (id)stringForInstallationState:(unsigned long long)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)VPNUUIDString;
- (id)_stringForType:(unsigned long long)arg1;
- (id)bundleIdentifier;
- (id)configuration;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)displayName;
- (id)dynamicUsage;
- (void)encodeWithCoder:(id)arg1;
- (id)externalVersionIdentifier;
- (id)feedback;
- (bool)hasUpdateAvailable;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)installationState;
- (bool)isAdHocCodeSigned;
- (bool)isAppStoreVendable;
- (bool)isBetaApp;
- (bool)isBlocked;
- (bool)isDeviceBasedVPP;
- (bool)isEqual:(id)arg1;
- (bool)isLicenseExpired;
- (bool)isLicenseRevoked;
- (bool)isPlaceholder;
- (bool)isRestricted;
- (bool)isUPP;
- (bool)isUserBasedVPP;
- (bool)isValidated;
- (id)managementInformation;
- (id)onDemandResourcesUsage;
- (void)setBundleIdentifier:(id)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setDynamicUsage:(id)arg1;
- (void)setExternalVersionIdentifier:(id)arg1;
- (void)setFeedback:(id)arg1;
- (void)setHasUpdateAvailable:(bool)arg1;
- (void)setInstallationState:(unsigned long long)arg1;
- (void)setIsAdHocCodeSigned:(bool)arg1;
- (void)setIsAppStoreVendable:(bool)arg1;
- (void)setIsBetaApp:(bool)arg1;
- (void)setIsBlocked:(bool)arg1;
- (void)setIsDeviceBasedVPP:(bool)arg1;
- (void)setIsLicenseExpired:(bool)arg1;
- (void)setIsLicenseRevoked:(bool)arg1;
- (void)setIsPlaceholder:(bool)arg1;
- (void)setIsRestricted:(bool)arg1;
- (void)setIsUPP:(bool)arg1;
- (void)setIsUserBasedVPP:(bool)arg1;
- (void)setIsValidated:(bool)arg1;
- (void)setManagementInformation:(id)arg1;
- (void)setOnDemandResourcesUsage:(id)arg1;
- (void)setSharedUsage:(id)arg1;
- (void)setShortVersion:(id)arg1;
- (void)setStaticUsage:(id)arg1;
- (void)setStoreItemIdentifier:(id)arg1;
- (void)setType:(unsigned long long)arg1;
- (void)setVPNUUIDString:(id)arg1;
- (void)setVersion:(id)arg1;
- (id)sharedUsage;
- (id)shortVersion;
- (id)staticUsage;
- (id)storeItemIdentifier;
- (unsigned long long)type;
- (id)version;

@end
