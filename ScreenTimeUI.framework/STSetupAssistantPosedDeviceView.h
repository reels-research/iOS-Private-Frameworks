/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ScreenTimeUI.framework/ScreenTimeUI
 */

@interface STSetupAssistantPosedDeviceView : UIView {
    STSetupAssistantUsageDetailsCoordinator * _coordinator;
    long long  _deviceSize;
    UIImageView * _deviceWithScreenImage;
    bool  _isiPad;
    UILabel * _manageScreenTimeLabel;
    STWeeklyReportViewController * _reportViewController;
    bool  _requestsBackgroundBleed;
    UILabel * _screenTimeLabel;
}

@property (retain) STSetupAssistantUsageDetailsCoordinator *coordinator;
@property long long deviceSize;
@property (retain) UIImageView *deviceWithScreenImage;
@property bool isiPad;
@property (retain) UILabel *manageScreenTimeLabel;
@property (retain) STWeeklyReportViewController *reportViewController;
@property bool requestsBackgroundBleed;
@property (retain) UILabel *screenTimeLabel;

// Image: /System/Library/PrivateFrameworks/ScreenTimeUI.framework/ScreenTimeUI

- (void).cxx_destruct;
- (id)_deviceBezelImageName;
- (bool)_isRTL;
- (double)_notificationTopOffset;
- (double)_notificationWidth;
- (double)_screenTimeLeadingOffset;
- (double)_screenTimeTopOffset;
- (double)_screenTimeTrailingOffset;
- (void)_setUpContentView;
- (id)coordinator;
- (long long)deviceSize;
- (id)deviceWithScreenImage;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isiPad;
- (void)layoutSubviews;
- (id)manageScreenTimeLabel;
- (id)reportViewController;
- (bool)requestsBackgroundBleed;
- (id)screenTimeLabel;
- (void)setCoordinator:(id)arg1;
- (void)setDeviceSize:(long long)arg1;
- (void)setDeviceWithScreenImage:(id)arg1;
- (void)setIsiPad:(bool)arg1;
- (void)setManageScreenTimeLabel:(id)arg1;
- (void)setReportViewController:(id)arg1;
- (void)setRequestsBackgroundBleed:(bool)arg1;
- (void)setScreenTimeLabel:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;

// Image: /System/Library/AccessibilityBundles/ScreenTimeUI.axbundle/ScreenTimeUI

+ (Class)safeCategoryBaseClass;

- (id)accessibilityLabel;
- (bool)isAccessibilityElement;

@end
